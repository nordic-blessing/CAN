<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="demo" targetName="demo.elf" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug-MinGW_STM32" ENABLED="true" CONFIG_NAME="Debug" TOOLCHAIN_NAME="MinGW_STM32" GENERATION_OPTIONS="-G &quot;MinGW Makefiles&quot;" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="cb20f6f6-a8b0-4a65-903c-95c5e4acf4bf" name="更改" comment="">
      <change afterPath="$PROJECT_DIR$/Core/Inc/can.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Core/Src/can.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.cproject" beforeDir="false" afterPath="$PROJECT_DIR$/.cproject" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/demo.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.mxproject" beforeDir="false" afterPath="$PROJECT_DIR$/.mxproject" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.project" beforeDir="false" afterPath="$PROJECT_DIR$/.project" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/CMSIS/Device/ST/STM32F0xx/LICENSE.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma_ex.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_exti.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_flash.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_flash_ex.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio_ex.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c_ex.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pwr.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pwr_ex.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crs.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_exti.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_utils.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/LICENSE.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_cortex.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_exti.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c_ex.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim_ex.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Inc/main.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Inc/stm32f0xx_hal_conf.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Inc/stm32f0xx_it.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/STM32F030F4PX_FLASH.ld" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Src/main.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Src/stm32f0xx_hal_msp.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Src/stm32f0xx_it.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Src/syscalls.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Src/sysmem.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Src/system_stm32f0xx.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Startup/startup_stm32f030f4px.s" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/.cmake/api/v1/reply/codemodel-v2-507d888075f44399df37.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/.cmake/api/v1/reply/index-2024-09-15T08-16-09-0571.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/.cmake/api/v1/reply/target-demo.elf-Debug-57800fd2270f8e76bc06.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/3.28.1/CMakeDetermineCompilerABI_C.bin" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/3.28.1/CMakeDetermineCompilerABI_C.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/3.28.1/CMakeDetermineCompilerABI_CXX.bin" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/3.28.1/CMakeDetermineCompilerABI_CXX.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/CMakeConfigureLog.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/CMakeConfigureLog.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/Makefile2" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/Makefile2" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/clion-Debug-MinGW_STM32-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/clion-Debug-MinGW_STM32-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/demo.elf.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/progress.marks" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/CMakeFiles/progress.marks" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug-mingw_stm32/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/demo.ioc" beforeDir="false" afterPath="$PROJECT_DIR$/demo.ioc" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug-MinGW_STM32" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;nordic-blessing&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/nordic-blessing/CAN.git&quot;,
    &quot;accountId&quot;: &quot;6555b7b3-6c54-4671-a16c-634ea1c82508&quot;
  }
}</component>
  <component name="PerforceDirect.Settings">
    <option name="CHARSET" value="无" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2024" />
    <option name="minorVersion" value="1.4" />
    <option name="productBranch" value="Classic" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2m6DDyFLTSbaH3MzolmP4d3dqkO" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;CMakeSettings&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="OpenOCD 下载并运行.OCD demo">
    <configuration default="true" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="demo.elf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="demo" TARGET_NAME="demo.elf" CONFIG_NAME="Debug-MinGW_STM32" RUN_TARGET_PROJECT_NAME="demo" RUN_TARGET_NAME="demo.elf">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake 应用程序.demo.elf" />
      <item itemvalue="OpenOCD 下载并运行.OCD demo" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="默认任务">
      <changelist id="cb20f6f6-a8b0-4a65-903c-95c5e4acf4bf" name="更改" comment="" />
      <created>1726388016488</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1726388016488</updated>
      <workItem from="1726388019412" duration="2046000" />
      <workItem from="1726449624266" duration="6710000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticReloadCMake value="true" />
  </component>
</project>